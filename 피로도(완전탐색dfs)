class Solution {
    private int maxCount = 0; //탐험할 수 있는 최대 던전 수
    
    public int solution(int k, int[][] dungeons) {
        boolean[] visited = new boolean[dungeons.length];
        dfs(k, dungeons, visited, 0);
        return maxCount;
    }
    
    private void dfs(int fatigue, int[][] dungeons, boolean[] visited, int count){
        maxCount = Math.max(maxCount, count);
        
        for(int i = 0; i < dungeons.length; i++){
            if(!visited[i] && fatigue >= dungeons[i][0]){
                visited[i] = true;
                dfs(fatigue-dungeons[i][1], dungeons, visited, count+1);
                visited[i] = false; //백트래킹 (다른 순서도 고려)!!!!중요
                
                
                
                }
        }
    }
    
    
    
        
        
    
        
        
        
        
    
}
