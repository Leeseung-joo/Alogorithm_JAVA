import java.util.*;

class Solution {
    public String[] solution(String[] files) {
        ArrayList<String[]> list = new ArrayList<>();
        
        for (int k = 0; k < files.length; k++) {
            String file = files[k];
            int cnt = 0;

            // HEAD 찾기
            while (cnt < file.length() && !Character.isDigit(file.charAt(cnt))) {
                cnt++;
            }
            String head = file.substring(0, cnt);

            // NUMBER 찾기
            int numStart = cnt;
            while (cnt < file.length() && Character.isDigit(file.charAt(cnt))) {
                cnt++;
            }
            String number = file.substring(numStart, cnt);

            // 리스트에 추가 (HEAD, NUMBER, 원래 순서)
            list.add(new String[]{head, number, String.valueOf(k)});
        }

        // 정렬
        Collections.sort(list, (o1, o2) -> {
            int headCompare = o1[0].compareToIgnoreCase(o2[0]);
            if (headCompare == 0) { // HEAD가 같으면 NUMBER 비교
                int numCompare = Integer.parseInt(o1[1]) - Integer.parseInt(o2[1]);
                if (numCompare == 0) { // NUMBER도 같으면 원래 순서 유지
                    return Integer.parseInt(o1[2]) - Integer.parseInt(o2[2]);
                }
                return numCompare;
            }
            return headCompare;
        });

        // 원래 파일명을 배열로 변환해서 반환
        return list.stream().map(arr -> files[Integer.parseInt(arr[2])]).toArray(String[]::new);
    }
}
